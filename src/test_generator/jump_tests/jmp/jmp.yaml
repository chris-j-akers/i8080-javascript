# Tests moving data from Memory locations to Register using MOV OpCode
---
test_suite:
  enable: True
  generator_function: jmp_tests.generate_jmp
  description: 'JMP'
  output_file_name: '/jump/jmp.test.js'
  header: |
    import { Computer } from '../../computer.js'
    import { i8080 } from '../../i8080.js'
    import { strict as assert } from 'assert'

  footer: |
    });
  boilerplate: |
    const c = new Computer();
    const FlagType = c.cpu.FlagManager.FlagType;

    let program = [
      0x26,                   // MVI into Register H...
      0xFF,                   // ...This high-byte
      0x2E,                   // MVI into Register L...
      0xFE,                   // ...This low-byte
      0x36,                   // MVI into memory location (stored in registers H/L)
      0x76,                   // ...OpCode 0x76 (So the program HALTS when the program counter changes on JMP)
      0xC3,                   // JMP
      0xFE,                   // ..This low-byte
      0xFF                    // ...and this high-byte
    ]

      c.InjectProgram(program);
      c.ExecuteProgram();

      assert.equal(c.cpu.ProgramCounter, {expected_program_counter});
      assert.equal(c.cpu.Clock, {expected_clock});

    }});
    
  tests:

    - test:
      name: Jump, program counter is modified
      expected_program_counter: 0xFFFF
      expected_clock: 41


    