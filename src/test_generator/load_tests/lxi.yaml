---
test_suite:
  enable: True
  generator_function: load_tests.generate_lxi
  description: 'LXI Register'
  output_file_name: '/load/lxi.reg.test.js'
  header: |
    const Computer = require('../../computer');
    const i8080 = require('../../i8080');
  footer: |
    });
  boilerplate: |
    const max_value_to_test = {max_value_to_test};
    const c = new Computer();
    let msb, lsb;

    for (let word = 0x0000; word <= max_value_to_test; word++) {{

        msb = word & 0xFF;
        lsb = (word >> 8) & 0xFF;

        c.cpu.lxi('{msb_register}', msb, lsb);
        expect(c.cpu.registers.{msb_register}).toEqual(word & 0x00FF);
        expect(c.cpu.registers.{lsb_register}).toEqual((word >> 8) & 0x00FF);
    }}
    }});

  tests:

    - test:
      name: LXI B,d16
      comment: 
      msb_register: B
      lsb_register: C
      
    - test:
      name: LXI D,d16
      comment: 
      msb_register: D
      lsb_register: E    
    
    - test:
      name: LXI H,d16
      comment: 
      msb_register: H
      lsb_register: L