# Tests moving fata from register to register using the MOV OpCode
---
test_suite:
  enable: True
  generator_function: mvi_tests.generate_mvi_mem
  description: 'MVI Memory'
  output_file_name: '/move/mvi.mem.test.js'
  header: |
    import { Computer } from '../../computer.js'
    import { strict as assert } from 'assert'
  footer: |
    });
  boilerplate: |
    const max_mem_addr = {max_mem_addr};
    const c = new Computer();
    const data = 0xFFFF;

    let program = [
      0x26,           // MOV into H...
      null,           // ...addr high-byte (to be inserted)
      0x2E,           // MOV into L...
      null,           // ... addr low-byte (to be inserted)
      0x36,           // MVI to this address...
      data,           // ...this immediate value
      0x76,           // HALT
    ]

    for (let mem_addr = program.length; mem_addr <= max_mem_addr; mem_addr++) {{
      program[1] = (mem_addr >> 8) & 0xff;
      program[3] = mem_addr & 0xFF;

      c.LoadProgram(program);
      c.ExecuteProgram();

      assert.equal(c.Bus.ReadRAM(mem_addr), data);

      assert.equal(c.CPUState.Clock, 31);
      c.Reset();
    }}
    }});

  tests:

    - test:
      name: 'MVI M'
