---
test_suite:
  enable: True
  generator_function: xri_tests.generate_xri
  description: 'XRI'
  output_file_name: '/logical/xri.test.js'
  header: |
    import { Computer } from '../../computer.js'
    import { i8080 } from '../../i8080.js'
    import { strict as assert } from 'assert'
  footer: |
    });
  boilerplate: |
    const c = new Computer();
    const FlagType = c.cpu.FlagManager.FlagType;


    const program = [
      0x3E,          // MVI into Accumulator....
      {accumulator}, // ...this value
      0xEE,          // XRI with ...
      {data},        // ...this value
      0x76           // HALT
    ]

    c.inject_program(program);
    {set_carry}
    c.execute_program();

    assert.equal(c.cpu.registers.A, {expected_result});
    assert.equal(c.cpu.FlagManager.IsSet(FlagType.Carry), {carry});
    assert.equal(c.cpu.FlagManager.IsSet(FlagType.Parity),{parity});
    assert.equal(c.cpu.FlagManager.IsSet(FlagType.AuxillaryCarry), {auxillary_carry});
    assert.equal(c.cpu.FlagManager.IsSet(FlagType.Zero), {zero});
    assert.equal(c.cpu.FlagManager.IsSet(FlagType.Sign), {sign});

    assert.equal(c.cpu.clock, 18);

    c.reset();
    }});

  tests:

    - test:
      name: Reset Carry Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 100 | 0x64 | 01100100 | 004 | 0x04 | 00000100 | 004 | 0x04 | 00000100 |       |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: True
      data: 16
      accumulator: 20
      expected_result: 4
      carry: False
      parity: False
      auxillary_carry: False
      zero: False
      sign: False

    - test:
      name: Set Zero Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 255 | 0xFF | 11111111 | 000 | 0x00 | 00000000 | 000 | 0x00 | 00000000 | P|Z   |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: False
      data: 255
      accumulator: 255
      expected_result: 0
      carry: False
      parity: True
      auxillary_carry: False
      zero: True
      sign: False

    - test:
      name: Set Sign Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 255 | 0xFF | 11111111 | 127 | 0x7F | 01111111 | 128 | 0x80 | 10000000 | S     |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: False
      data: 255
      accumulator: 127
      expected_result: 128
      carry: False
      parity: False
      auxillary_carry: False
      zero: False
      sign: True
 
    - test:
      name: Set Parity Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 080 | 0x50 | 01010000 | 085 | 0x55 | 01010101 | 005 | 0x05 | 00000101 | P     |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: False
      data: 80
      accumulator: 85
      expected_result: 5
      carry: False
      parity: True
      auxillary_carry: False
      zero: False
      sign: False