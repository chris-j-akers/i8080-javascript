---
test_suite:
  enable: True
  generator_function: ani_tests.generate_ani
  description: 'ANI'
  output_file_name: '/logical/ani.test.js'
  header: |
    import { Computer } from '../../computer.js'
    import { i8080 } from '../../i8080.js'
    import { strict as assert } from 'assert'
  footer: |
    });
  boilerplate: |
    const c = new Computer();
    const FlagType = c._cpu._flagManager.FlagType;


    const program = [
      0x3E,          // MVI into Accumulator....
      {accumulator}, // ...this value
      0xE6,          // ANI with ...
      {data},        // ...this value
      0x76           // HALT
    ]

    c.LoadProgram(program);
    {set_carry}
    c.ExecuteProgram();

    assert.equal(c.CPUState.Registers.A, {expected_result});
    assert.equal(c._cpu._flagManager.IsSet(FlagType.Carry), {carry});
    assert.equal(c._cpu._flagManager.IsSet(FlagType.Parity),{parity});
    assert.equal(c._cpu._flagManager.IsSet(FlagType.AuxillaryCarry), {auxillary_carry});
    assert.equal(c._cpu._flagManager.IsSet(FlagType.Zero), {zero});
    assert.equal(c._cpu._flagManager.IsSet(FlagType.Sign), {sign});

    assert.equal(c.CPUState.Clock, 18);

    c.Reset();
    }});

  tests:

    - test:
      name: Reset Carry Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 100 | 0x64 | 01100100 | 004 | 0x04 | 00000100 | 004 | 0x04 | 00000100 |       |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: True
      data: 100
      accumulator: 4
      expected_result: 4
      carry: False
      parity: False
      auxillary_carry: False
      zero: False
      sign: False

    - test:
      name: Set Zero Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 255 | 0xFF | 11111111 | 000 | 0x00 | 00000000 | 000 | 0x00 | 00000000 | P|Z   |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: False
      data: 255
      accumulator: 0
      expected_result: 0
      carry: False
      parity: True
      auxillary_carry: False
      zero: True
      sign: False

    - test:
      name: Set Sign Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 255 | 0xFF | 11111111 | 128 | 0x80 | 10000000 | 128 | 0x80 | 10000000 | S     |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: False
      data: 255
      accumulator: 128
      expected_result: 128
      carry: False
      parity: False
      auxillary_carry: False
      zero: False
      sign: True
 
    - test:
      name: Set Parity Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 255 | 0xFF | 11111111 | 005 | 0x05 | 00000101 | 005 | 0x05 | 00000101 | P     |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: False
      data: 255
      accumulator: 5
      expected_result: 5
      carry: False
      parity: True
      auxillary_carry: False
      zero: False
      sign: False