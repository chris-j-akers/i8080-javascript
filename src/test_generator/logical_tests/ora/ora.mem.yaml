---
test_suite:
  enable: True
  generator_function: ora_tests.generate_ora_mem
  description: 'ORA Memory'
  output_file_name: '/logical/ora.mem.test.js'
  header: |
    import { Computer } from '../../computer.js'
    import { i8080 } from '../../i8080.js'
    import { strict as assert } from 'assert'
  footer: |
    });
  boilerplate: |
    const max_mem_addr = {max_mem_addr};
    const c = new Computer();
    const FlagType = c._cpu._flagManager.FlagType;


    const data = {data};

    const program = [
      0x3E,                   // MVI into Accumulator
      {accumulator},          // Immediate value (in test config)
      0x26,                   // MOV into H...
      null,                   // ...addr high-byte (inserted, below)
      0x2E,                   // MOV into L...
      null,                   // ... addr low-byte (inserted, below)
      0x36,                   // MOV into the memory address...
      data,                   // ...the data value
      0xB6,                   // ORA
      0x76                    // Halt Program
    ]

    for (let mem_addr = program.length; mem_addr <= max_mem_addr; mem_addr++) {{
      program[3] = (mem_addr >> 8) & 0xFF;
      program[5] = mem_addr & 0xFF;

      c.LoadProgram(program);
      {set_carry}
      c.ExecuteProgram();

      assert.equal(c.CPUState.Registers.A, {expected_result});
      assert.equal(c._cpu._flagManager.IsSet(FlagType.Carry), {carry});
      assert.equal(c._cpu._flagManager.IsSet(FlagType.Parity),{parity});
      assert.equal(c._cpu._flagManager.IsSet(FlagType.AuxillaryCarry), {auxillary_carry});
      assert.equal(c._cpu._flagManager.IsSet(FlagType.Zero), {zero});
      assert.equal(c._cpu._flagManager.IsSet(FlagType.Sign), {sign});

      assert.equal(c.CPUState.Clock, 45);

      c.Reset();
      }}
    }});
  tests:

    - test:
      name: Reset Carry Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Memory          |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 100 | 0x64 | 00000100 | 004 | 0x04 | 00000101 | 004 | 0x04 | 00000100 |       |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: True
      data: 4
      accumulator: 5
      expected_result: 5
      carry: False
      parity: True
      auxillary_carry: False
      zero: False
      sign: False

    - test:
      name: Set Zero Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Memory          |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 000 | 0x00 | 00000000 | 000 | 0x00 | 00000000 | 000 | 0x00 | 00000000 | P|Z   |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: False
      data: 0
      accumulator: 0
      expected_result: 0
      carry: False
      parity: True
      auxillary_carry: False
      zero: True
      sign: False

    - test:
      name: Set Sign Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Memory          |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 255 | 0xFF | 11111111 | 127 | 0x7F | 01111111 | 255 | 0xFF | 11111111 | S     |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: False
      data: 255
      accumulator: 127
      expected_result: 255
      carry: False
      parity: True
      auxillary_carry: False
      zero: False
      sign: True
 
    - test:
      name: Set Parity Flag
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Memory          |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 081 | 0x51 | 01010001 | 068 | 0x44 | 01000100 | 085 | 0x55 | 01010101 | P     |
        // +-----------------------+-----------------------+-----------------------+-------+
      set_carry: False
      data: 81
      accumulator: 68
      expected_result: 85
      carry: False
      parity: True
      auxillary_carry: False
      zero: False
      sign: False