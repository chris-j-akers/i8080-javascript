---
test_suite:
  enable: True
  generator_function: cma_tests.generate_cma
  description: 'CMA'
  output_file_name: '/complement/cma.test.js'
  header: |
    import { Computer } from '../../computer.js'
    import { i8080 } from '../../i8080.js'
    import { strict as assert } from 'assert'

  footer: |
    });
  boilerplate: |
    const c = new Computer();
    const FlagType = c.cpu._flag_manager.FlagType;


    let program = [
        0x3E,                 // MVI into the accumulator...
        {accumulator},        // ... this immediate value
        0x2F,                 // CMA
        0x76                  // HALT
      ]

    c.InjectProgram(program);
    c.ExecuteProgram();

    assert.equal(c.cpu.registers['A'], {expected_result});
    assert.equal(c.cpu.Clock, 18);

    }});

  tests:

    - test:
      name: 0xFF becomes 0x00
      accumulator: 255
      expected_result: 0
      
    - test:
      name: 0x00 becomes 0xFF
      accumulator: 0
      expected_result: 255
