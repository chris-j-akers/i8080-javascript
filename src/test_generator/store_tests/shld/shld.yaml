# Tests moving data from Memory locations to Register using MOV OpCode
---
test_suite:
  enable: True
  generator_function: shld_tests.generate_shld
  description: 'SHLD'
  output_file_name: '/store/shld.test.js'
  header: |
    import { Computer } from '../../computer.js'
    import { strict as assert } from 'assert'
  footer: |
    });
  boilerplate: |
    const max_mem_addr = {max_mem_addr};
    const c = new Computer();

    const program = [
      0x26,                   // MVI into H...
      0xE,                    // ...this data
      0x2E,                   // MVI into L...
      0x71,                   // ...this data
      0x22,                   // SHLD
      null,                   // addr low-byte (inserted, below)
      null,                   // addr high-byte (inserted, below)
      0x76                    // HALT
    ]

    for (let mem_addr = program.length; mem_addr <= max_mem_addr; mem_addr++) {{  
      program[5] = mem_addr & 0xFF;
      program[6] = (mem_addr >> 8) & 0xFF;

      c.InjectProgram(program);
      c.ExecuteProgram();

      assert.equal(c.bus.Read(mem_addr), 0x71);
      assert.equal(c.bus.Read(mem_addr + 1), 0xE);

      assert.equal(c.cpu.Clock, 37);

      c.Reset();
    }}
    }});
  tests:

    - test:
      name: Store H & L values in 16-bit address found by combining B, C
  
