---
test_suite:
  enable: True
  generator_function: dad_tests.generate_dad_sp
  description: 'DAD SP'
  output_file_name: '/arithmetic/dad.stack-pointer.test.js'
  header: |
    import { Computer } from '../../computer.js'
    import { i8080 } from '../../i8080.js'
    import { strict as assert } from 'assert'

    const opcode_lookup = {
    'B': {MVI: 0x06, DAD: 0x09},
    'C': {MVI: 0x0E, NOP: 0x00},
    'D': {MVI: 0x16, DAD: 0x19},
    'E': {MVI: 0x1E, NOP: 0x00},
    'H': {MVI: 0x26, DAD: 0x29},
    'L': {MVI: 0x2E, NOP: 0x00}
    };

  footer: |
    });
  boilerplate: |
    const c = new Computer();
    const FlagType = c._cpu._flagManager.FlagType;


    let program = [
      0x31,                             // Set stack pointer to...
      {stack_pointer} & 0xFF,           // ...this low-byte....
      {stack_pointer} >> 8 & 0xFF,      // ...this high-byte
      0x26,                             // MVI into H...
      {h_reg},                          // ... this data
      0x2E,                             // MVI into L...
      {l_reg},                          // ...this data
      0x39,                             // Call relevant DAD command
      0x76                              // HALT
    ]

      c.LoadProgram(program);
      c.ExecuteProgram();

      assert.equal((c.CPUState.Registers['H'] << 8 | c.CPUState.Registers['L']) & 0xFFFF, {expected_result})
      assert.equal(c._cpu._flagManager.IsSet(FlagType.Carry), {carry})

      assert.equal(c._cpu._flagManager.IsSet(FlagType.Parity),false);
      assert.equal(c._cpu._flagManager.IsSet(FlagType.AuxillaryCarry), false);
      assert.equal(c._cpu._flagManager.IsSet(FlagType.Zero), false);
      assert.equal(c._cpu._flagManager.IsSet(FlagType.Sign), false);

      assert.equal(c.CPUState.Clock, 41);
      
      c.Reset();
    }});

  tests:

    - test:
      name: Carry unset and not set
      set_carry: false
      h_reg: 117
      l_reg: 48
      stack_pointer: 30000
      expected_result: 60000
      carry: false

    - test:
      name: Carry unset and set
      set_carry: false
      h_reg: 255
      l_reg: 255
      stack_pointer: 1
      expected_result: 0
      carry: true

    - test:
      name: Carry set then unset
      set_carry: true
      h_reg: 64
      l_reg: 1
      stack_pointer: 16385
      expected_result: 32770
      carry: false


