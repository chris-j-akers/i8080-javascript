---
test_suite:
  enable: True
  generator_function: adc_tests.generate_adc_reg
  description: 'ADC Register (Unset All Flags)'
  output_file_name: '/arithmetic/adc.reg.unset-flags.test.js'
  header: |
    const Computer = require('../../computer');
    const i8080 = require('../../i8080');
  footer: |
    });
  boilerplate: |
    const c = new Computer();
    const FlagType = i8080.FlagType;

    for (reg in Object.keys(c.cpu.registers).filter((register) => register != 'A')) {{
      c.cpu.mvi_reg('A', {accumulator});
      c.cpu.mvi_reg(reg, {data});

      c.cpu.set_flag(FlagType.Parity);
      c.cpu.set_flag(FlagType.AuxillaryCarry);
      c.cpu.set_flag(FlagType.Zero);
      c.cpu.set_flag(FlagType.Sign);

      expect(c.cpu.flag_set(FlagType.Parity)).toBeTruthy();
      expect(c.cpu.flag_set(FlagType.AuxillaryCarry)).toBeTruthy();
      expect(c.cpu.flag_set(FlagType.Zero)).toBeTruthy();
      expect(c.cpu.flag_set(FlagType.Sign)).toBeTruthy();
      
      {set_carry}
      c.cpu.adc_reg(c.cpu.registers[reg]);

      expect(c.cpu.registers.A).toEqual({expected_result});
      expect(c.cpu.flag_set(FlagType.Carry)).{carry}();
      expect(c.cpu.flag_set(FlagType.Parity)).{parity}();
      expect(c.cpu.flag_set(FlagType.AuxillaryCarry)).{auxillary_carry}();
      expect(c.cpu.flag_set(FlagType.Zero)).{zero}();
      expect(c.cpu.flag_set(FlagType.Sign)).{sign}();
      c.reset();
    }}
    }});

  tests:

    - test:
      name: Unset All Flags (With Carry Unset)
      comment: |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // |       Register        |      Accumulator      | Carry |       Expected        | Flags |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // | 001 | 0x01 | 00000001 | 001 | 0x01 | 00000001 |     0 | 002 | 0x02 | 00000010 |       |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
      data: 1
      accumulator: 01
      set_carry: False
      expected_result: 2
      carry: False
      parity: False
      auxillary_carry: False
      zero: False
      sign: False

    - test:
      name: Unset All Flags (With Carry Set)
      comment: |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // |       Register        |      Accumulator      | Carry |       Expected        | Flags |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // | 001 | 0x01 | 00000001 | 000 | 0x00 | 00000000 |    1  | 002 | 0x02 | 00000010 |       |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
      data: 1
      accumulator: 0
      set_carry: True
      expected_result: 2
      carry: False
      parity: False
      auxillary_carry: False
      zero: False
      sign: False
      