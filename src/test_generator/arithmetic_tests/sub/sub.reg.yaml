---
test_suite:
  enable: True
  generator_function: sub_tests.generate_sub_reg
  description: 'SUB Register'
  output_file_name: '/arithmetic/sub.reg.test.js'
  header: |
    import { Computer } from '../../computer.js'
    import { i8080 } from '../../i8080.js'
    import { strict as assert } from 'assert'

    /**
    * An opcode lookup table allows us to programmatically determine which OpCodes
    * to use, depending on the register being tested. It saves us having to write a
    * separate test per register. Instead we can loop through each one and run the
    * same test.
    */
    const opcode_lookup = {
        'B': {MVI: 0x06, SUB: 0x90},
        'C': {MVI: 0x0E, SUB: 0x91},
        'D': {MVI: 0x16, SUB: 0x92},
        'E': {MVI: 0x1E, SUB: 0x93},
        'H': {MVI: 0x26, SUB: 0x94},
        'L': {MVI: 0x2E, SUB: 0x95}
    };
  footer: |
    });
  boilerplate: |
    const c = new Computer();
    const FlagType = c.cpu.FlagManager.FlagType;


    let program = [
        0x3E, 
        {accumulator},  // MOV A, #{accumulator}
        null,           // Placeholder for relavent MOV opcode (see opcode lookup table)
        {data},         // MOV [R], {data}
        null,           // Placeholder for relavent SUB opcode (see opcode lookup table)
        0x76            // HALT
    ]

    for (let reg of Object.keys(c.cpu.registers).filter((register) => register != 'A')) {{
        program[2] = opcode_lookup[reg].MVI;
        program[4] = opcode_lookup[reg].SUB;

        c.inject_program(program);
        c.execute_program();

        assert.equal(c.cpu.registers.A, {expected_result});
        assert.equal(c.cpu.FlagManager.IsSet(FlagType.Carry), {carry});
        assert.equal(c.cpu.FlagManager.IsSet(FlagType.Parity),{parity});
        assert.equal(c.cpu.FlagManager.IsSet(FlagType.AuxillaryCarry), {auxillary_carry});
        assert.equal(c.cpu.FlagManager.IsSet(FlagType.Zero), {zero});
        assert.equal(c.cpu.FlagManager.IsSet(FlagType.Sign), {sign});

        assert.equal(c.cpu.clock, 25);

        c.reset();
    }};
    }});

  tests:

    - test:
      name: No Flags Set
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 001 | 0x01 | 00000001 | 032 | 0x20 | 00100000 | 31 | 0x1F | 000011111 |       |
        // +-----------------------+-----------------------+-----------------------+-------+
      data: 1
      accumulator: 32
      expected_result: 31
      carry: False
      parity: False
      auxillary_carry: False
      zero: False
      sign: False
      
      
    - test:
      name: Parity, Aux Carry and Zero Flag Set
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 001 | 0x01 | 00000001 | 001 | 0x01 | 00000001 | 000 | 0x00 | 00000000 | P|A|Z |
        // +-----------------------+-----------------------+-----------------------+-------+
      data: 1
      accumulator: 1
      expected_result: 0
      carry: False
      parity: True
      auxillary_carry: True
      zero: True
      sign: False

    - test:
      name: Parity Flag Set
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 002 | 0x02 | 00000010 | 032 | 0x20 | 00100000 | 030 | 0x1E | 00011110 | P     |
        // +-----------------------+-----------------------+-----------------------+-------+
      data: 2
      accumulator: 32
      expected_result: 30
      carry: False
      parity: True
      auxillary_carry: False
      zero: False
      sign: False

    - test:
      name: Aux Carry Flag Set
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 003 | 0x03 | 00000011 | 127 | 0x7F | 01111111 | 124 | 0x7C | 01111100 | A     |
        // +-----------------------+-----------------------+-----------------------+-------+
      data: 3
      accumulator: 127
      expected_result: 124
      carry: False
      parity: False
      auxillary_carry: True
      zero: False
      sign: False


    - test:
      name: Sign Flag Set
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 001 | 0x01 | 00000001 | 255 | 0xFF | 11111111 | 254 | 0xFE | 11111110 | A|S   |
        // +-----------------------+-----------------------+-----------------------+-------+
      data: 1
      accumulator: 255
      expected_result: 254
      carry: False
      parity: False
      auxillary_carry: True
      zero: False
      sign: True

    - test:
      name: Carry and Sign Flags Set
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Register        |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 255 | 0xFF | 11111111 | 020 | 0x14 | 00000001 | 251 | 0xFB | 11111011 | C|S   |
        // +-----------------------+-----------------------+-----------------------+-------+
      data: 10
      accumulator: 5
      expected_result: 251
      carry: True
      parity: False
      auxillary_carry: False
      zero: False
      sign: True
