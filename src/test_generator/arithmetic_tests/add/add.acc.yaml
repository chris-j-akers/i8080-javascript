---
test_suite:
  enable: True
  generator_function: add_tests.generate_add_acc
  description: 'ADD Accumulator'
  output_file_name: '/arithmetic/add.acc.test.js'
  header: |
    const Source = require('../../i8080');
  footer: |
    });
  boilerplate: |
    const c = new Source.Computer();
    const FlagType = Source.i8080.FlagType;

    c.cpu.registers.A = {accumulator};
    c.cpu.add_reg(c.cpu.registers.A);

    expect(c.cpu.registers.A).toEqual({expected_result});
    expect(c.cpu.flag_set(FlagType.Carry)).{carry}();
    expect(c.cpu.flag_set(FlagType.Parity)).{parity}();
    expect(c.cpu.flag_set(FlagType.AuxillaryCarry)).{auxillary_carry}();
    expect(c.cpu.flag_set(FlagType.Zero)).{zero}();
    expect(c.cpu.flag_set(FlagType.Sign)).{sign}();
    c.reset();
    }});

  tests:

    - test:
      name: NO FLAGS SET
      comment: |
        // +-----------------------+-----------------------+-------+
        // |      Accumulator      |      Expected         | Flags |
        // +-----------------------+-----------------------+-------+
        // | 002 | 0x02 | 00000010 | 004 | 0x04 | 00000100 |       |
        // +-----------------------+-----------------------+-------+
      accumulator: 2
      expected_result: 4
      carry: False
      parity: False
      auxillary_carry: False
      zero: False
      sign: False
 
    - test:
      name: SET ZERO
      comment: |
        // +-----------------------+-----------------------+-------+
        // |      Accumulator      |      Expected         | Flags |
        // +-----------------------+-----------------------+-------+
        // | 000 | 0x00 | 00000000 | 000 | 0x00 | 00000000 | P|Z   |
        // +-----------------------+-----------------------+-------+
      accumulator: 0
      expected_result: 0
      carry: False
      parity: True
      auxillary_carry: False
      zero: True
      sign: False

    - test:
      name: SET PARITY
      comment: |
        // +-----------------------+-----------------------+-------+
        // |      Accumulator      |      Expected         | Flags |
        // +-----------------------+-----------------------+-------+
        // | 000 | 0x00 | 00000000 | 000 | 0x00 | 0000000 | P      |
        // +-----------------------+-----------------------+-------+
      accumulator: 0
      set_carry: False
      expected_result: 0
      carry: False
      parity: True
      auxillary_carry: False
      zero: True
      sign: False

    - test:
      name: SET AUX CARRY
      comment: |
        // +-----------------------+-----------------------+-------+
        // |      Accumulator      |      Expected         | Flags |
        // +-----------------------+-----------------------+-------+
        // | 009 | 0x09 | 00001001 | 018 | 0x12 | 00010010 | P|A   |
        // +-----------------------+-----------------------+-------+
      accumulator: 9
      expected_result: 18
      carry: False
      parity: True
      auxillary_carry: True
      zero: False
      sign: False

    - test:
      name: SET SIGN
      comment: |
        // +-----------------------+-----------------------+-------+
        // |      Accumulator      |     Expected          | Flags |
        // +-----------------------+-----------------------+-------+
        // | 089 | 0x59 | 01011001 | 178 | 0xB2 | 10110010 | P|A|S |
        // +-----------------------+-----------------------+-------+
      accumulator: 89
      expected_result: 178
      carry: False
      parity: True
      auxillary_carry: True
      zero: False
      sign: True

    - test:
      name: SET CARRY
      comment: |
        // +-----------------------+-----------------------+-------+
        // |      Accumulator      |      Expected         | Flags |
        // +-----------------------+-----------------------+-------+
        // | 241 | 0xF1 | 11110001 | 226 | 0xE2 | 11100010 | C|P|S |
        // +-----------------------+-----------------------+-------+
      accumulator: 241
      expected_result: 226
      carry: True
      parity: True
      auxillary_carry: False
      zero: False
      sign: True
