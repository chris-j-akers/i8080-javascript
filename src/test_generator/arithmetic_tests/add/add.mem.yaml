---
test_suite:
  enable: True
  generator_function: add_tests.generate_add_mem
  description: 'ADD Memory'
  output_file_name: '/arithmetic/add.mem.test.js'
  header: |
    import { Computer } from '../../computer.js'
    import { i8080 } from '../../i8080.js'
    import { strict as assert } from 'assert'
  footer: |
    });
  boilerplate: |
    const max_mem_addr = {max_mem_addr};
    const c = new Computer();
    const FlagType = c.cpu._flag_manager.FlagType;


    const data = {data};

    const program = [
      0x3E,                   // MVI into Accumulator
      {accumulator},          // ..this immediate value (in test config)
      0x26,                   // MOV into H...
      null,                   // ...the high-byte of the memory address (inserted, below)
      0x2E,                   // MOV into L...
      null,                   // ... the low-byte of the memory address (inserted, below)
      0x36,                   // MOV into the memory address...
      data,                   // ...the data value
      0x86,                   // Add data in Memory Location to Accumulator
      0x76                    // HALT
    ]

    for (let mem_addr = program.length; mem_addr <= max_mem_addr; mem_addr++) {{
      program[3] = (mem_addr >> 8) & 0xFF;
      program[5] = mem_addr & 0xFF;

      c.InjectProgram(program);
      c.ExecuteProgram();

      assert.equal(c.cpu.registers.A,{expected_result});
      assert.equal(c.cpu._flag_manager.IsSet(FlagType.Carry), {carry});
      assert.equal(c.cpu._flag_manager.IsSet(FlagType.Parity), {parity});
      assert.equal(c.cpu._flag_manager.IsSet(FlagType.AuxillaryCarry), {auxillary_carry});
      assert.equal(c.cpu._flag_manager.IsSet(FlagType.Zero), {zero});
      assert.equal(c.cpu._flag_manager.IsSet(FlagType.Sign), {sign});
      
      assert.equal(c.cpu.Clock, 45);
      
      c.Reset();
      }}
    }});

  tests:

    - test:
      name: No Flags Set
      comment: |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // |       Data            |      Accumulator      | Carry |       Expected        | Flags |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // | 001 | 0x01 | 00000001 | 000 | 0x00 | 00000000 |     0 | 001 | 0x01 | 00000001 |       |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
      data: 1
      accumulator: 0
      expected_result: 1
      carry: False
      parity: False
      auxillary_carry: False
      zero: False
      sign: False
            
    - test:
      name: Parity and Zero Flag Set
      comment: |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // |       Memory          |      Accumulator      | Carry |       Expected        | Flags |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // | 000 | 0x00 | 00000000 | 000 | 0x00 | 00000000 |     0 | 000 | 0x00 | 00000000 | P|Z   |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
      data: 0
      accumulator: 0
      expected_result: 0
      carry: False
      parity: True
      auxillary_carry: False
      zero: True
      sign: False

    - test:
      name: Parity Flag Set
      comment: |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // |       Memory          |      Accumulator      | Carry |       Expected        | Flags |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // | 084 | 0x54 | 01010100 | 001 | 0x01 | 00000001 |     0 | 085 | 0x55 | 01010101 | P     |
        // +-----------------------+-----------------------+-------+-----------------------+-------+ 
      data: 84
      accumulator: 1
      expected_result: 85
      carry: False
      parity: True
      auxillary_carry: False
      zero: False
      sign: False

    - test:
      name: Aux Carry Flag Set
      comment: |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // |       Memory          |      Accumulator      | Carry |       Expected        | Flags |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // | 015 | 0x0F | 00001111 | 001 | 0x01 | 00000001 |     0 | 016 | 0x10 | 00010000 | A     |
        // +-----------------------+-----------------------+-------+-----------------------+-------+   
      data: 15
      accumulator: 1
      expected_result: 16
      carry: False
      parity: False
      auxillary_carry: True
      zero: False
      sign: False

    - test:
      name: Aux Carry and Sign Flags Set
      comment: |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // |       Memory          |      Accumulator      | Carry |       Expected        | Flags |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // | 127 | 0x7F | 11111110 | 001 | 0x01 | 00000001 |     0 | 128 | 0x80 | 10000000 | A|S   |
        // +-----------------------+-----------------------+-------+-----------------------+-------+   
      data: 127
      accumulator: 1
      expected_result: 128
      carry: False
      parity: False
      auxillary_carry: True
      zero: False
      sign: True

    - test:
      name: Carry and Aux Carry Flags Set
      comment: |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // |       Memory          |      Accumulator      | Carry |       Expected        | Flags |
        // +-----------------------+-----------------------+-------+-----------------------+-------+
        // | 255 | 0xFF | 11111111 | 020 | 0x14 | 00001110 |     0 | 019 | 0x13 | 00010011 | C|A   |
        // +-----------------------+-----------------------+-------+-----------------------+-------+    
      data: 255
      accumulator: 20
      expected_result: 19
      carry: True
      parity: False
      auxillary_carry: True
      zero: False
      sign: False
