---
test_suite:
  enable: True
  generator_function: add_tests.generate_add_mem
  description: 'ADD Memory (Unset All Flags)'
  output_file_name: '/arithmetic/add.mem.unset-flags.test.js'
  header: |
    const Computer = require('../../computer');
    const i8080 = require('../../i8080');
  footer: |
    });
  boilerplate: |
    const max_mem_addr = {max_mem_addr};
    const c = new Computer();
    const FlagType = i8080.FlagType;

    const data = {data};

    for (let mem_addr = 0x00; mem_addr <= max_mem_addr; mem_addr++) {{
      c.cpu.load_mem_addr(mem_addr, 'H', 'L');
      c.cpu.mvi_to_mem(data);
      c.cpu.mvi_reg('A', {accumulator})

      c.cpu.set_flag(FlagType.Carry);
      c.cpu.set_flag(FlagType.Parity);
      c.cpu.set_flag(FlagType.AuxillaryCarry);
      c.cpu.set_flag(FlagType.Zero);
      c.cpu.set_flag(FlagType.Sign);

      expect(c.cpu.flag_set(FlagType.Carry)).toBeTruthy();
      expect(c.cpu.flag_set(FlagType.Parity)).toBeTruthy();
      expect(c.cpu.flag_set(FlagType.AuxillaryCarry)).toBeTruthy();
      expect(c.cpu.flag_set(FlagType.Zero)).toBeTruthy();
      expect(c.cpu.flag_set(FlagType.Sign)).toBeTruthy();

      c.cpu.add_mem();

      expect(c.cpu.registers.A).toEqual({expected_result});
      expect(c.cpu.flag_set(FlagType.Carry)).{carry}();
      expect(c.cpu.flag_set(FlagType.Parity)).{parity}();
      expect(c.cpu.flag_set(FlagType.AuxillaryCarry)).{auxillary_carry}();
      expect(c.cpu.flag_set(FlagType.Zero)).{zero}();
      expect(c.cpu.flag_set(FlagType.Sign)).{sign}();

      c.reset();
    }}
    }});

  tests:

    - test:
      name: Unset All Flags
      comment: |
        // +-----------------------+-----------------------+-----------------------+-------+
        // |       Memory          |      Accumulator      |       Expected        | Flags |
        // +-----------------------+-----------------------+-----------------------+-------+
        // | 001 | 0x01 | 00000001 | 000 | 0x00 | 00000000 | 001 | 0x01 | 00000001 |       |
        // +-----------------------+-----------------------+-----------------------+-------+
      data: 1
      accumulator: 0
      set_carry: False
      expected_result: 1
      carry: False
      parity: False
      auxillary_carry: False
      zero: False
      sign: False
